basePath: /api/v1
definitions:
  article.Article:
    properties:
      created_at:
        example: "1985-04-12T23:20:50.52Z"
        type: string
      id:
        example: 5b4d078d-14f2-4876-9f45-0ac244874d99
        type: string
      min_amount:
        example: 1
        type: integer
      name:
        example: kebab
        type: string
      updated_at:
        example: "1985-04-12T23:20:50.52Z"
        type: string
    required:
    - created_at
    - id
    - min_amount
    - name
    - updated_at
    type: object
  article.addArticle:
    properties:
      min_amount:
        example: 1
        type: integer
      name:
        example: kebab
        type: string
    required:
    - min_amount
    - name
    type: object
host: localhost:8080
info:
  contact:
    name: API Support
  description: This is a simple api for providing inventory management capabilities
  title: WHDSL Inventory API
  version: "1.0"
paths:
  /articles:
    get:
      consumes:
      - application/json
      description: gets accounts
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/article.Article'
            type: array
        "404":
          description: Not Found
          schema:
            type: string
      summary: List articles
      tags:
      - articles
    post:
      consumes:
      - application/json
      description: creates article
      parameters:
      - description: Add Article
        in: body
        name: article
        required: true
        schema:
          $ref: '#/definitions/article.addArticle'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Create article
      tags:
      - articles
  /articles/{id}:
    get:
      consumes:
      - application/json
      description: gets an article by ID
      parameters:
      - description: Article ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/article.Article'
        "404":
          description: Not Found
          schema:
            type: string
      summary: Show an article
      tags:
      - articles
swagger: "2.0"
